#pragma once
#include<iostream>
#include<complex>

using namespace std;

class MatCompleja {
private:
	int m, n;
	double** elem;
public:
	MatCompleja(int m, int n) {
		this->m = m;
		this->n = n;
		elem = new double* [m];
		for (int i = 0; i < m; i++)
			elem[i] = new double[n];
	}
public:
	MatCompleja operator + (MatCompleja B) {
		MatCompleja S(m, n);
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				S.elem[i][j] = elem[i][j] + B.elem[i][j];
			}
		}
		return(S);
	}
public:
	void leeMat() {
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				cin >> elem[i][j];
			}
		}
	}
	void ponMat() {
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				cout << elem[i][j];
			}
		}
	}
};
